#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%enable-all-warnings
%require-types
%strict-args
%no-child-restrictions

%requires ../../../../qlib/QUnit.qm

%exec-class ThreadParsingTest

class ThreadParsingTest inherits QUnit::Test {
    constructor() : QUnit::Test("Thread parsing test", "1.0") {
        addTestCase("Test", \testThreadParsing());
        set_return_value(main());
    }

    testThreadParsing() {
        our Counter c(1);
        our Counter ack(1);

        string Code = "ack.dec(); c.waitForZero();";

        # set up the Program container
        Program p(PO_NEW_STYLE);
        p.importGlobalVariable("c");
        p.importGlobalVariable("ack");
        p.parse(Code, "thread-parsing");

        # start out background thread in the Program container
        background p.run();

        # wait for background thread to start before executing test
        ack.waitForZero();

        # parse in new code while a thread is running
        p.parse("const A = 1; int sub get_a() { return A; }", "neg");

        # executed the parsed code
        assertEq(1, p.callFunction("get_a"));

        # confirm that the initial thread can terminate
        c.dec();
    }
}
